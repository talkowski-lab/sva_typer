use crate::hmm::HMM;
use crate::builder::*;

fn gen_sva_model() -> HMM {
    let settings = HMMBuildSettings::default();

    let hexamer_repeat = "CCCTCT";

    let vntr_repeats = vec![
        "GCCTCTGCCCGGCCGCCCAGTCTGGGAAGTGAGGAGC",
        "GCCCGGCCAGCCGCCCCGTCCGGGAGGAGGTGGGGGGGTCAGCCCCC",
        "GCCGCCCCGACCGGGAAGTGAGGAGCCCCTCTGCCCG"
    ];

    let hexamer_hmm = create_HMM_from_motifs(
        vec![hexamer_repeat],
        vec!["hex"],
        settings,
        "hexamer_region"
    );

    let vntr_hmm = create_HMM_from_motifs(
        vntr_repeats,
        vec!["VNTR_1", "VNTR_2", "VNTR_3"],
        settings,
        "VNTR_region"
    );
    append_HMM(vec![hexamer_hmm, vntr_hmm])
}



#[cfg(test)]
mod tests {
    use super::*;
    use crate::utils::*;

    const SVA_F_SEQ: &str = "CTCTCCCTCTCCCTCTCCCTCTCCCTCTCCCTCTCCCTCTCCCTCTCCCCTCTTTCCACGGTCTCCCTCTCATGCGGAGCCGAAGCTGGACTGTACTGCTGCCATCTCGGCTCACTGCAACCTCCCTGCCTGATTCTCCTGCCTCAGCCTGCCGAGTGCCTGCGATTGCAGGCACGCGCCGCCACGCCTGACTGGTTTTGGTGGAGACGGGGTTTCGCTGTGTTGGCCGGGCCGGTCTCCAGCCCCTAACCGCGAGTGATCCGCCAGCCTCGGCCTCCCGAGGTGCCGGGATTGCAGACGGAGTCTCGTTCACTCAGTGCTCAATGGTGCCCAGGCTGGAGTGCAGTGGCGTGATCTCGGCTCGCTACAACCTACACCTCCCAGCCGCCTGCCTTGGCCTCCCAAAGTGCCGAGATTGCAGCCTCTGCCCGGCCGCCGCCCCGTCTGGGAGGTGAGGAGCGCCTCTGCCCGGCCGCCCATCGTCTGGGANGTGAGGAGCCCCTCTGCCCGGCCGCCCCGTCTGGGAGGTGAGGAGCGCCTCCGCCCGGCCGCCGCCCCGTCCGGGAGGTGAGGAGCGTCTCCGCCCGGCCGCCCNCCGTCCGGGANGTGAGGAGCGCCTCCGCCCGGCCGCCCCGTCCGGGANGTGAGGAGCGCCTCCGCCCGGCCAGCCGCCCCGTCCGGGAGGTGGGGGGGTCAGCCCCCCGCCCGGCCAGCCGCCCCGTCCGGGAGGAGGTGGGGGGGTCAGCCCCCCGCCCGGCCAGCCGCCCCGTCCGGGAGGTGAGGGGCGCCTCTGCCCGGCCGCCCCTACTGGGAAGTGAGGAGCCCCTCTGCCCGGCCACCGCCCCGTCCGGGAGGTGTGCCCAACAGCTCATTGAGAACGGGCCAGGATGACAATGGCGGCTTTGTGGAATAGAAAGGCGGGAAAGGTGGGGAAAAGATTGAGAAATCGGATGGTTGCCGTGTCTGTGTAGAAAGAAGTAGACATGGGAGACTTTTCATTTTGTTCTGCACTAAGAAAAATTCCTCTGCCTTGGGATCCTGTTGATCTGTGACCTTACCCCCAACCCTGTGCTCTCTGAAACATGTGCTGTGTCCACTCAGGGTTAAATGGATTAAGGGCGGTGCAAGATGTGCTTTGTTAAACAGATGCTTGAAGGCAGCATGCTCGTTAAGAGTCATCACCAATCCCTAATCTCAAGTAATCAGGGACACAAACACTGCGGAAGGCCGCAGGGTCCTCTGCCTAGGAAAACCAGAGACCTTTGTTCACTTGTTTATCTGCTGACCTTCCCTCCACTATTGTCCCATGACCCTGCCAAATCCCCCTCTGTGAGAAACACCCAAGAATTATCAATAAAAAAAATNAAAAAAAAAA";

    #[test]
    fn sva_test() {
        let mut hmm = gen_sva_model();
        hmm.check_valid();
        let result = hmm.query(&sequence_to_bytes(SVA_F_SEQ));
        pprint_intervals(result);
        panic!();
    }
}
